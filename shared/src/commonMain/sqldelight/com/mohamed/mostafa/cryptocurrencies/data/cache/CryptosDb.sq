CREATE TABLE crypto_Entity(
    id TEXT NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    symbol TEXT NOT NULL,
    description TEXT NOT NULL DEFAULT "", --empty string untill it gets updated by the details request--
    image TEXT NOT NULL,
    currentPrice REAL NOT NULL, --Real is retrieved as double from the db--
    marketCap INTEGER NOT NULL DEFAULT -1,-- Integer is retrieved as long from the db--
    marketCapRank INTEGER NOT NULL,
    priceState TEXT NOT NULL,
    isFavorite INTEGER AS Boolean NOT NULL DEFAULT 0 --default value for isFavorite Boolean is 0 (FALSE)
);

--TODO Update the Crypto Entity Later to include list of strings and Enum values--

insertCrypt: INSERT INTO crypto_Entity (
id,name,symbol,image,currentPrice,marketCap,marketCapRank,priceState
) VALUES (?,?,?,?,?,?,?,?)
ON CONFLICT(id) DO UPDATE SET
name = excluded.name,
symbol = excluded.symbol,
image= excluded.image,
currentPrice= excluded.currentPrice,
marketCap= excluded.marketCap,
priceState = excluded.priceState,
marketCapRank= excluded.marketCapRank;


getAllCryptos: SELECT * FROM crypto_Entity;

getAllFavorites: SELECT * FROM crypto_Entity WHERE isFavorite = 1;

addToFavorites: UPDATE crypto_Entity SET isFavorite = 1 WHERE id =:id;

removeFromFavorites: UPDATE crypto_Entity SET isFavorite =0 WHERE id=:id;

getCryptosByPage:
SELECT * FROM crypto_Entity ORDER BY marketCapRank LIMIT :pageSize OFFSET :offset;

getCryptoById:
SELECT * FROM crypto_Entity WHERE id = :id;

updateCryptoDetails: UPDATE crypto_Entity SET description = :description WHERE id =:id;

deleteCryptoById: DELETE FROM crypto_Entity WHERE id =:id;

clearCryptos: DELETE FROM crypto_Entity;